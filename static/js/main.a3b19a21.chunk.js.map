{"version":3,"sources":["api/users.js","api/todos.js","shapes/UserShape.js","shapes/TodoShape.js","components/User/User.js","shapes/TodoListShape.js","components/Todo/Todo.js","components/TodoList/TodoList.js","components/TodoForm/TodoForm.js","App.js","index.js"],"names":["users","id","name","username","email","address","street","suite","city","zipcode","geo","lat","lng","phone","website","company","catchPhrase","bs","todos","userId","title","completed","UserShape","PropTypes","shape","string","isRequired","taskStatus","bool","TodoShape","user","User","arrayOf","Todo","TodoList","className","map","todo","key","TodoForm","state","userName","titleError","userNameError","handleChange","event","target","value","type","setState","replace","handleSubmit","preventDefault","props","addTodo","newUser","find","this","onSubmit","htmlFor","placeholder","onChange","React","PureComponent","prepearedTodos","todosFromServer","App","prevState","newTodo","length","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.a3b19a21.chunk.js","sourcesContent":["const users = [\r\n  {\r\n    id: 1,\r\n    name: 'Leanne Graham',\r\n    username: 'Bret',\r\n    email: 'Sincere@april.biz',\r\n    address: {\r\n      street: 'Kulas Light',\r\n      suite: 'Apt. 556',\r\n      city: 'Gwenborough',\r\n      zipcode: '92998-3874',\r\n      geo: {\r\n        lat: '-37.3159',\r\n        lng: '81.1496',\r\n      },\r\n    },\r\n    phone: '1-770-736-8031 x56442',\r\n    website: 'hildegard.org',\r\n    company: {\r\n      name: 'Romaguera-Crona',\r\n      catchPhrase: 'Multi-layered client-server neural-net',\r\n      bs: 'harness real-time e-markets',\r\n    },\r\n  },\r\n  {\r\n    id: 2,\r\n    name: 'Ervin Howell',\r\n    username: 'Antonette',\r\n    email: 'Shanna@melissa.tv',\r\n    address: {\r\n      street: 'Victor Plains',\r\n      suite: 'Suite 879',\r\n      city: 'Wisokyburgh',\r\n      zipcode: '90566-7771',\r\n      geo: {\r\n        lat: '-43.9509',\r\n        lng: '-34.4618',\r\n      },\r\n    },\r\n    phone: '010-692-6593 x09125',\r\n    website: 'anastasia.net',\r\n    company: {\r\n      name: 'Deckow-Crist',\r\n      catchPhrase: 'Proactive didactic contingency',\r\n      bs: 'synergize scalable supply-chains',\r\n    },\r\n  },\r\n  {\r\n    id: 3,\r\n    name: 'Clementine Bauch',\r\n    username: 'Samantha',\r\n    email: 'Nathan@yesenia.net',\r\n    address: {\r\n      street: 'Douglas Extension',\r\n      suite: 'Suite 847',\r\n      city: 'McKenziehaven',\r\n      zipcode: '59590-4157',\r\n      geo: {\r\n        lat: '-68.6102',\r\n        lng: '-47.0653',\r\n      },\r\n    },\r\n    phone: '1-463-123-4447',\r\n    website: 'ramiro.info',\r\n    company: {\r\n      name: 'Romaguera-Jacobson',\r\n      catchPhrase: 'Face to face bifurcated interface',\r\n      bs: 'e-enable strategic applications',\r\n    },\r\n  },\r\n  {\r\n    id: 4,\r\n    name: 'Patricia Lebsack',\r\n    username: 'Karianne',\r\n    email: 'Julianne.OConner@kory.org',\r\n    address: {\r\n      street: 'Hoeger Mall',\r\n      suite: 'Apt. 692',\r\n      city: 'South Elvis',\r\n      zipcode: '53919-4257',\r\n      geo: {\r\n        lat: '29.4572',\r\n        lng: '-164.2990',\r\n      },\r\n    },\r\n    phone: '493-170-9623 x156',\r\n    website: 'kale.biz',\r\n    company: {\r\n      name: 'Robel-Corkery',\r\n      catchPhrase: 'Multi-tiered zero tolerance productivity',\r\n      bs: 'transition cutting-edge web services',\r\n    },\r\n  },\r\n  {\r\n    id: 5,\r\n    name: 'Chelsey Dietrich',\r\n    username: 'Kamren',\r\n    email: 'Lucio_Hettinger@annie.ca',\r\n    address: {\r\n      street: 'Skiles Walks',\r\n      suite: 'Suite 351',\r\n      city: 'Roscoeview',\r\n      zipcode: '33263',\r\n      geo: {\r\n        lat: '-31.8129',\r\n        lng: '62.5342',\r\n      },\r\n    },\r\n    phone: '(254)954-1289',\r\n    website: 'demarco.info',\r\n    company: {\r\n      name: 'Keebler LLC',\r\n      catchPhrase: 'User-centric fault-tolerant solution',\r\n      bs: 'revolutionize end-to-end systems',\r\n    },\r\n  },\r\n  {\r\n    id: 6,\r\n    name: 'Mrs. Dennis Schulist',\r\n    username: 'Leopoldo_Corkery',\r\n    email: 'Karley_Dach@jasper.info',\r\n    address: {\r\n      street: 'Norberto Crossing',\r\n      suite: 'Apt. 950',\r\n      city: 'South Christy',\r\n      zipcode: '23505-1337',\r\n      geo: {\r\n        lat: '-71.4197',\r\n        lng: '71.7478',\r\n      },\r\n    },\r\n    phone: '1-477-935-8478 x6430',\r\n    website: 'ola.org',\r\n    company: {\r\n      name: 'Considine-Lockman',\r\n      catchPhrase: 'Synchronised bottom-line interface',\r\n      bs: 'e-enable innovative applications',\r\n    },\r\n  },\r\n  {\r\n    id: 7,\r\n    name: 'Kurtis Weissnat',\r\n    username: 'Elwyn.Skiles',\r\n    email: 'Telly.Hoeger@billy.biz',\r\n    address: {\r\n      street: 'Rex Trail',\r\n      suite: 'Suite 280',\r\n      city: 'Howemouth',\r\n      zipcode: '58804-1099',\r\n      geo: {\r\n        lat: '24.8918',\r\n        lng: '21.8984',\r\n      },\r\n    },\r\n    phone: '210.067.6132',\r\n    website: 'elvis.io',\r\n    company: {\r\n      name: 'Johns Group',\r\n      catchPhrase: 'Configurable multimedia task-force',\r\n      bs: 'generate enterprise e-tailers',\r\n    },\r\n  },\r\n  {\r\n    id: 8,\r\n    name: 'Nicholas Runolfsdottir V',\r\n    username: 'Maxime_Nienow',\r\n    email: 'Sherwood@rosamond.me',\r\n    address: {\r\n      street: 'Ellsworth Summit',\r\n      suite: 'Suite 729',\r\n      city: 'Aliyaview',\r\n      zipcode: '45169',\r\n      geo: {\r\n        lat: '-14.3990',\r\n        lng: '-120.7677',\r\n      },\r\n    },\r\n    phone: '586.493.6943 x140',\r\n    website: 'jacynthe.com',\r\n    company: {\r\n      name: 'Abernathy Group',\r\n      catchPhrase: 'Implemented secondary concept',\r\n      bs: 'e-enable extensible e-tailers',\r\n    },\r\n  },\r\n  {\r\n    id: 9,\r\n    name: 'Glenna Reichert',\r\n    username: 'Delphine',\r\n    email: 'Chaim_McDermott@dana.io',\r\n    address: {\r\n      street: 'Dayna Park',\r\n      suite: 'Suite 449',\r\n      city: 'Bartholomebury',\r\n      zipcode: '76495-3109',\r\n      geo: {\r\n        lat: '24.6463',\r\n        lng: '-168.8889',\r\n      },\r\n    },\r\n    phone: '(775)976-6794 x41206',\r\n    website: 'conrad.com',\r\n    company: {\r\n      name: 'Yost and Sons',\r\n      catchPhrase: 'Switchable contextually-based project',\r\n      bs: 'aggregate real-time technologies',\r\n    },\r\n  },\r\n  {\r\n    id: 10,\r\n    name: 'Clementina DuBuque',\r\n    username: 'Moriah.Stanton',\r\n    email: 'Rey.Padberg@karina.biz',\r\n    address: {\r\n      street: 'Kattie Turnpike',\r\n      suite: 'Suite 198',\r\n      city: 'Lebsackbury',\r\n      zipcode: '31428-2261',\r\n      geo: {\r\n        lat: '-38.2386',\r\n        lng: '57.2232',\r\n      },\r\n    },\r\n    phone: '024-648-3804',\r\n    website: 'ambrose.net',\r\n    company: {\r\n      name: 'Hoeger LLC',\r\n      catchPhrase: 'Centralized empowering task-force',\r\n      bs: 'target end-to-end models',\r\n    },\r\n  },\r\n];\r\n\r\nexport default users;\r\n","/* eslint-disable max-len */\r\n\r\nconst todos = [\r\n  {\r\n    userId: 1,\r\n    id: 1,\r\n    title: 'delectus aut autem',\r\n    completed: false,\r\n  },\r\n  {\r\n    userId: 1,\r\n    id: 2,\r\n    title: 'quis ut nam facilis et officia qui',\r\n    completed: false,\r\n  },\r\n];\r\n\r\nexport default todos;\r\n","import PropTypes from 'prop-types';\n\nexport const UserShape = PropTypes.shape({\n  name: PropTypes.string.isRequired,\n  taskStatus: PropTypes.bool.isRequired,\n}).isRequired;\n","import PropTypes from 'prop-types';\nimport { UserShape } from './UserShape';\n\nexport const TodoShape = PropTypes.shape({\n  title: PropTypes.string.isRequired,\n  completed: PropTypes.bool.isRequired,\n  user: UserShape.isRequired,\n}).isRequired;\n","import React from 'react';\nimport { UserShape } from '../../shapes/UserShape';\n\nexport const User = ({ user }) => (\n  <th>{user.name}</th>\n);\n\nUser.propTypes = UserShape;\n","import PropTypes from 'prop-types';\nimport { TodoShape } from './TodoShape';\n\nexport const TodoListShape = {\n  todos: PropTypes.arrayOf(TodoShape).isRequired,\n};\n","import React from 'react';\nimport { TodoShape } from '../../shapes/TodoShape';\nimport { User } from '../User/User';\n\nexport const Todo = ({ title, completed, user }) => (\n  <>\n    <th>{title}</th>\n    <User user={user} />\n    <th>{completed ? 'Done' : 'Not yet'}</th>\n  </>\n);\n\nTodo.propTypes = TodoShape;\n","import React from 'react';\nimport { TodoListShape } from '../../shapes/TodoListShape';\nimport { Todo } from '../Todo/Todo';\n\nexport const TodoList = ({ todos }) => (\n  <table className=\"todo__list\">\n    <thead>\n      <tr>\n        <th>task</th>\n        <th>user</th>\n        <th>status</th>\n      </tr>\n    </thead>\n    <tbody>\n      {todos.map(todo => (\n        <tr key={todo.id}>\n          <Todo {...todo} />\n        </tr>\n      ))}\n    </tbody>\n  </table>\n\n);\n\nTodoList.propTypes = TodoListShape;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport './TodoForm.scss';\n\nimport { UserShape } from '../../shapes/UserShape';\n\nexport class TodoForm extends React.PureComponent {\n  state = {\n    title: '',\n    userName: '',\n    titleError: false,\n    userNameError: false,\n  }\n\n  handleChange = (event) => {\n    const { name, value, type } = event.target;\n\n    this.setState({\n      [name]: type === 'text'\n        ? value.replace(/[^\\w ]+/, '')\n        : value,\n      [`${name}Error`]: false,\n    });\n  }\n\n  handleSubmit = (event) => {\n    event.preventDefault();\n    const { title, userName } = this.state;\n    const { addTodo, users } = this.props;\n\n    if (!title) {\n      this.setState({ titleError: true });\n    }\n\n    if (userName === 'Choose a user' || !userName) {\n      this.setState({ userNameError: true });\n    }\n\n    if (title && userName) {\n      const newUser = users.find(user => user.name === userName);\n\n      this.setState({\n        title: '',\n        userName: '',\n      });\n      addTodo(title, newUser);\n    }\n  }\n\n  render() {\n    const { users } = this.props;\n    const { title, userName, titleError, userNameError } = this.state;\n\n    return (\n      <form className=\"TodoForm\" onSubmit={this.handleSubmit}>\n        <label className=\"TodoForm__label\" htmlFor=\"title\">\n          Enter the title\n        </label>\n\n        <input\n          name=\"title\"\n          id=\"title\"\n          placeholder=\"Task\"\n          type=\"text\"\n          value={title}\n          onChange={this.handleChange}\n          className=\"TodoForm__field\"\n        />\n\n        {\n          titleError\n            ? <span className=\"TodoForm__error\">Please enter the title</span>\n            : ''\n        }\n\n        <label\n          className=\"TodoForm__label\"\n          htmlFor=\"userName\"\n        >\n          Choose a user\n        </label>\n\n        <select\n          name=\"userName\"\n          id=\"userName\"\n          value={userName}\n          onChange={this.handleChange}\n          className=\"TodoForm__field\"\n        >\n          <option>Choose a user</option>\n          {users.map(user => (\n            <option key={user.id} value={user.name}>\n              {user.name}\n            </option>\n          ))}\n        </select>\n\n        {\n          userNameError\n            ? <span className=\"TodoForm__error\">Please choose a user</span>\n            : ''\n        }\n\n        <button\n          type=\"submit\"\n          className=\"TodoForm__submit\"\n        >\n          Add task\n        </button>\n      </form>\n    );\n  }\n}\n\nTodoForm.propTypes = {\n  users: PropTypes.arrayOf(UserShape).isRequired,\n  addTodo: PropTypes.func.isRequired,\n};\n","import React from 'react';\nimport './App.scss';\n\nimport users from './api/users';\nimport todosFromServer from './api/todos';\nimport { TodoList } from './components/TodoList/TodoList';\nimport { TodoForm } from './components/TodoForm/TodoForm';\n\nconst prepearedTodos = todosFromServer.map(todo => ({\n  ...todo,\n  user: users.find(user => user.id === todo.userId),\n}));\n\nclass App extends React.PureComponent {\n  state = {\n    todos: prepearedTodos,\n  }\n\n  addTodo = (title, user) => {\n    this.setState((prevState) => {\n      const newTodo = {\n        userId: user.id,\n        id: prevState.todos.length + 1,\n        title,\n        completed: false,\n        user,\n      };\n\n      return { todos: [...prevState.todos, newTodo] };\n    });\n  }\n\n  render() {\n    const { todos } = this.state;\n\n    return (\n      <div className=\"App\">\n        <TodoForm users={users} addTodo={this.addTodo} />\n        <TodoList todos={todos} />\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport App from './App';\r\n\r\nReactDOM.render(<App />, document.getElementById('root'));\r\n"],"sourceRoot":""}